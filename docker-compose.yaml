version: "3.9"

volumes:
  kafka-data:
  common-db-volume:
  auth-db-volume:


services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: true

  common-postgres:
    image: postgres:alpine
    command: ["postgres", "-c", "log_statement=all", "-c", "log_min_duration_statement=1"]
    ports:
      - "5432:5432"
    volumes:
      - common-db-volume:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  # auth-postgres:
  #   image: postgres:alpine
  #   command: ["postgres", "-c", "log_statement=all", "-c", "log_min_duration_statement=1"]
  #   ports:
  #     - "5433:5432"
  #   volumes:
  #     - auth-db-volume:/var/lib/postgresql/data
  #   environment:
  #     - POSTGRES_DB=auth
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=postgres

  # auth-service:
  #   build:
  #     context: ./auth-service
  #     dockerfile: ./Dockerfile
  #   ports:
  #     - "8001:8000"
  #   depends_on:
  #     - auth-postgres
  #     - kafka
  #   environment:
  #     - DB_URI=postgresql+asyncpg://postgres:postgres@auth-postgres:5432/auth
  #     - KAFKA_BOOTSTRAP_SERVER=kafka:9092

  # task-tracker-postgres:
  #   image: postgres:alpine
  #   command: ["postgres", "-c", "log_statement=all", "-c", "log_min_duration_statement=1"]
  #   ports:
  #     - "5434:5432"
  #   volumes:
  #     - task-tracker-db-volume:/var/lib/postgresql/data
  #   environment:
  #     - POSTGRES_DB=task-tracker
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=postgres

  # task-tracker-api:
  #   build:
  #     context: ./task-tracker
  #     dockerfile: ./Dockerfile
  #   ports:
  #     - "8002:8000"
  #   depends_on:
  #     - task-tracker-postgres
  #     - kafka
  #   environment:
  #     - DB_URI=postgresql+asyncpg://postgres:postgres@task-tracker-postgres:5432/task-tracker
  #     - KAFKA_BOOTSTRAP_SERVER=kafka:9092

  # task-tracker-consumer:
  #   build:
  #     context: ./task-tracker
  #     dockerfile: ./Dockerfile
  #   command: ["python", "-m", "app.consumers"]
  #   depends_on:
  #     - task-tracker-postgres
  #     - kafka
  #   environment:
  #     - DB_URI=postgresql+asyncpg://postgres:postgres@task-tracker-postgres:5432/task-tracker
  #     - KAFKA_BOOTSTRAP_SERVER=kafka:9092
